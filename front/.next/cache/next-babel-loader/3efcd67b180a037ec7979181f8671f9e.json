{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hs\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\CodeBox\\\\Inflearn\\\\NodeBird\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useInView } from \"react-intersection-observer\";\nimport PostForm from \"../components/PostForm\";\nimport PostCard from \"../components/PostCard\";\nimport AppLayout from \"../components/AppLayout\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nconst [ref, inView] = useInView();\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post); // useEffect(() => {\n  //   dispatch({\n  //     type: LOAD_POSTS_REQUEST,\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      var _mainPosts;\n\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, id]); // return (\n  //   <AppLayout>\n  //     {me && <PostForm />}\n  //     {mainPosts.map((c) => (\n  //       <PostCard key={c.id} post={c} />\n  //     ))}\n  //   </AppLayout>\n  // );\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n    style: {\n      height: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","useInView","PostForm","PostCard","AppLayout","LOAD_POSTS_REQUEST","ref","inView","Home","dispatch","me","state","user","mainPosts","hasMorePosts","loadPostsLoading","post","lastId","length","id","type","map","undefined","height"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nconst [ref, inView] = useInView();\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector(\r\n    (state) => state.post\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   dispatch({\r\n  //     type: LOAD_POSTS_REQUEST,\r\n  //   });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (inView && hasMorePosts && !loadPostsLoading) {\r\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n      dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n        lastId,\r\n      });\r\n    }\r\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, id]);\r\n\r\n  // return (\r\n  //   <AppLayout>\r\n  //     {me && <PostForm />}\r\n  //     {mainPosts.map((c) => (\r\n  //       <PostCard key={c.id} post={c} />\r\n  //     ))}\r\n  //   </AppLayout>\r\n  // );\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n      <div\r\n        ref={hasMorePosts && !loadPostsLoading ? ref : undefined}\r\n        style={{ height: 10 }}\r\n      />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;AACA,MAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,SAAS,EAA/B;;AAEA,MAAMO,IAAI,GAAG,MAAM;EACjB,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAM;IAAEU;EAAF,IAASX,WAAW,CAAEY,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;EACA,MAAM;IAAEC,SAAF;IAAaC,YAAb;IAA2BC;EAA3B,IAAgDhB,WAAW,CAC9DY,KAAD,IAAWA,KAAK,CAACK,IAD8C,CAAjE,CAHiB,CAOjB;EACA;EACA;EACA;EACA;;EAEAlB,SAAS,CAAC,MAAM;IACd,IAAIS,MAAM,IAAIO,YAAV,IAA0B,CAACC,gBAA/B,EAAiD;MAAA;;MAC/C,MAAME,MAAM,iBAAGJ,SAAS,CAACA,SAAS,CAACK,MAAV,GAAmB,CAApB,CAAZ,+CAAG,WAAiCC,EAAhD;MACAV,QAAQ,CAAC;QACPW,IAAI,EAAEf,kBADC;QAEPY;MAFO,CAAD,CAAR;IAID;EACF,CARQ,EAQN,CAACV,MAAD,EAASO,YAAT,EAAuBC,gBAAvB,EAAyCF,SAAzC,EAAoDM,EAApD,CARM,CAAT,CAbiB,CAuBjB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,OACE,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGT,EAAE,IAAI,MAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADT,EAEGG,SAAS,CAACQ,GAAV,CAAeL,IAAD,IACb,MAAC,QAAD;IAAU,GAAG,EAAEA,IAAI,CAACG,EAApB;IAAwB,IAAI,EAAEH,IAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADD,CAFH,EAKE;IACE,GAAG,EAAEF,YAAY,IAAI,CAACC,gBAAjB,GAAoCT,GAApC,GAA0CgB,SADjD;IAEE,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAV,CAFT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,CADF;AAYD,CA5CD;;AA8CA,eAAef,IAAf"},"metadata":{},"sourceType":"module"}