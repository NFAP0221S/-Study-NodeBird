{"ast":null,"code":"import { all, fork } from \"redux-saga/effects\"; // 사가 이펙트\n\nimport postSaga from \"./post\";\nimport userSaga from \"./user\"; // 사가 이펙트\n// delay, debounce, throttle, takeLatest, takeEvery, takeLeading, takeMaybe\n// all 은 배열을 받고 배열안의것들을 동시에 실행해줌\n// put 은 dispatch 역할\n// take 는 해당 요청이 들어올때까지 기다리는 것, 동기\n// takeEvery take의 비동기\n// takeLatest 클릭 실수 방지 , 마지막 요청만 실행\n// fork는 비동기 호출, 함수안의것들을 실행\n// call은 동기 호출, 함수안의것들을 실행\n// delay, setTimeOut 과 역할이 비슷함\n// 서버에 로그인 요청을 보냄\n// Post\n\nexport default function* rootSaga() {\n  yield all([fork(postSaga), fork(userSaga)]);\n}","map":{"version":3,"names":["all","fork","postSaga","userSaga","rootSaga"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/sagas/index.js"],"sourcesContent":["import { all, fork } from \"redux-saga/effects\"; // 사가 이펙트\r\n\r\nimport postSaga from \"./post\";\r\nimport userSaga from \"./user\";\r\n\r\n// 사가 이펙트\r\n// delay, debounce, throttle, takeLatest, takeEvery, takeLeading, takeMaybe\r\n\r\n// all 은 배열을 받고 배열안의것들을 동시에 실행해줌\r\n// put 은 dispatch 역할\r\n// take 는 해당 요청이 들어올때까지 기다리는 것, 동기\r\n// takeEvery take의 비동기\r\n// takeLatest 클릭 실수 방지 , 마지막 요청만 실행\r\n// fork는 비동기 호출, 함수안의것들을 실행\r\n// call은 동기 호출, 함수안의것들을 실행\r\n// delay, setTimeOut 과 역할이 비슷함\r\n\r\n// 서버에 로그인 요청을 보냄\r\n\r\n// Post\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(postSaga), fork(userSaga)]);\r\n}\r\n"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,QAA0B,oBAA1B,C,CAAgD;;AAEhD,OAAOC,QAAP,MAAqB,QAArB;AACA,OAAOC,QAAP,MAAqB,QAArB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,eAAe,UAAUC,QAAV,GAAqB;EAClC,MAAMJ,GAAG,CAAC,CAACC,IAAI,CAACC,QAAD,CAAL,EAAiBD,IAAI,CAACE,QAAD,CAArB,CAAD,CAAT;AACD"},"metadata":{},"sourceType":"module"}