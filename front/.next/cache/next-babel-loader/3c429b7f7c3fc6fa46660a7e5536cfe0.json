{"ast":null,"code":"import { HYDRATE } from \"next-redux-wrapper\";\nimport { combineReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\"; // 루트 리듀서\n// 서버 사이드 렌더링을 위해서 HYDRATE 추가, 원래는 index 없어도 됨\n\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return action.payload;\n\n    default:\n      {\n        const combinedReducer = combineReducers({\n          user,\n          post\n        });\n        return combinedReducer(state, action);\n      }\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","combineReducers","user","post","rootReducer","state","action","type","console","log","payload","combinedReducer"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport user from \"./user\";\r\nimport post from \"./post\";\r\n\r\n// 루트 리듀서\r\n// 서버 사이드 렌더링을 위해서 HYDRATE 추가, 원래는 index 없어도 됨\r\nconst rootReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case HYDRATE:\r\n      console.log(\"HYDRATE\", action);\r\n      return action.payload;\r\n    default: {\r\n      const combinedReducer = combineReducers({\r\n        user,\r\n        post,\r\n      });\r\n      return combinedReducer(state, action);\r\n    }\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;AACA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,OAAL;MACEQ,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,MAAvB;MACA,OAAOA,MAAM,CAACI,OAAd;;IACF;MAAS;QACP,MAAMC,eAAe,GAAGV,eAAe,CAAC;UACtCC,IADsC;UAEtCC;QAFsC,CAAD,CAAvC;QAIA,OAAOQ,eAAe,CAACN,KAAD,EAAQC,MAAR,CAAtB;MACD;EAVH;AAYD,CAbD;;AAeA,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}