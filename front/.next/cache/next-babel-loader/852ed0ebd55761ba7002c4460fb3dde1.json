{"ast":null,"code":"import shortId from \"shortid\";\nimport faker from \"faker\";\nimport produce from \"../util/produce\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\n\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortId.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: \"제로초\"\n    }\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.hasMorePosts = draft.mainPosts.length < 50;\n        break;\n\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Comments.unshift(action.data);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","faker","produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyComment","id","generate","content","User","nickname","reducer","state","action","draft","concat","length","error","unshift","filter","v","post","find","PostId","Comments"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport faker from \"faker\";\r\n\r\nimport produce from \"../util/produce\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로초\",\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}