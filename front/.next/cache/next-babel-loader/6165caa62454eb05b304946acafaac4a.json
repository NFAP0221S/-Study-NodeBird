{"ast":null,"code":"import shortId from \"shortid\";\nimport faker from \"faker\";\nimport produce from \"../util/produce\";\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const generateDummyPost = number => Array(number).fill().map(() => ({\n  id: shortId.generate(),\n  User: {\n    id: shortId.generate(),\n    nickname: faker.name.findName()\n  },\n  content: faker.lorem.paragraph(),\n  Images: [{\n    src: faker.image.image()\n  }],\n  Comments: [{\n    User: {\n      id: shortId.generate(),\n      nickname: faker.name.findName()\n    },\n    content: faker.lorem.sentence()\n  }]\n}));\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  }\n}); // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LOAD_POSTS_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"names":["shortId","faker","produce","initialState","mainPosts","imagePaths","hasMorePosts","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyComment","reducer","state","action","draft","concat","length","error","unshift","filter","v","post","find","postId"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport faker from \"faker\";\r\n\r\nimport produce from \"../util/produce\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const generateDummyPost = (number) =>\r\n  Array(number)\r\n    .fill()\r\n    .map(() => ({\r\n      id: shortId.generate(),\r\n      User: {\r\n        id: shortId.generate(),\r\n        nickname: faker.name.findName(),\r\n      },\r\n      content: faker.lorem.paragraph(),\r\n      Images: [\r\n        {\r\n          src: faker.image.image(),\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: faker.name.findName(),\r\n          },\r\n          content: faker.lorem.sentence(),\r\n        },\r\n      ],\r\n    }));\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로초\",\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}