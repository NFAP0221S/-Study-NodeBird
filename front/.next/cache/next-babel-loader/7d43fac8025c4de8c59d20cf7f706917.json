{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport reducer from \"../reducers\";\nimport rootSaga from \"../sagas\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // if (typeof action === \"function\") {\n  //   return action(dispatch, getState);\n  // }\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const SagaMiddleware = createSagaMiddleware(); // 미들웨어\n\n  const middlewares = [SagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) // 배포용 미들웨어\n  : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용 미들웨어\n\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = SagaMiddleware.run(rootSaga); // saga설정\n\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","SagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport reducer from \"../reducers\";\r\nimport rootSaga from \"../sagas\";\r\n\r\nconst loggerMiddleware =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action) => {\r\n    // if (typeof action === \"function\") {\r\n    //   return action(dispatch, getState);\r\n    // }\r\n    console.log(action);\r\n    return next(action);\r\n  };\r\n\r\nconst configureStore = () => {\r\n  const SagaMiddleware = createSagaMiddleware();\r\n  // 미들웨어\r\n  const middlewares = [SagaMiddleware, loggerMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"prodution\"\r\n      ? compose(applyMiddleware(...middlewares)) // 배포용 미들웨어\r\n      : composeWithDevTools(applyMiddleware(...middlewares)); // 개발용 미들웨어\r\n  const store = createStore(reducer, enhancer);\r\n  store.sagaTask = SagaMiddleware.run(rootSaga); // saga설정\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GACpB,CAAC;EAAEC,QAAF;EAAYC;AAAZ,CAAD,KACCC,IAAD,IACCC,MAAD,IAAY;EACV;EACA;EACA;EACAC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,OAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CATH;;AAWA,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,cAAc,GAAGX,oBAAoB,EAA3C,CAD2B,CAE3B;;EACA,MAAMY,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;EACA,MAAMU,QAAQ,GACZ,QACIhB,OAAO,CAACD,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CADX,CAC6C;EAD7C,EAEIb,mBAAmB,CAACH,eAAe,CAAC,GAAGgB,WAAJ,CAAhB,CAHzB,CAJ2B,CAOiC;;EAC5D,MAAME,KAAK,GAAGhB,WAAW,CAACG,OAAD,EAAUY,QAAV,CAAzB;EACAC,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB,CAT2B,CASoB;;EAC/C,OAAOY,KAAP;AACD,CAXD;;AAaA,MAAMG,OAAO,GAAGtB,aAAa,CAACe,cAAD,EAAiB;EAC5CQ,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}