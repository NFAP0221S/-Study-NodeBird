{"ast":null,"code":"import produce from \"../util/produce\";\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unLikePostLoading: false,\n  unLikePostDone: false,\n  unLikePostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"제로초\"\n  }\n}); // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case LIKE_POST_REQUEST:\n      draft.loadPostsLoading = true;\n      draft.loadPostsDone = false;\n      draft.loadPostsError = null;\n      break;\n\n    case LIKE_POST_SUCCESS:\n      draft.loadPostsLoading = false;\n      draft.loadPostsDone = true;\n      break;\n\n    case LIKE_POST_FAILURE:\n      draft.likePostLoading = false;\n      draft.likePostError = action.error;\n      break;\n\n    case UNLIKE_POST_REQUEST:\n      draft.likePostLoading = true;\n      draft.likePostDone = false;\n      draft.likePostError = null;\n      break;\n\n    case UNLIKE_POST_SUCCESS:\n      draft.likePostLoading = false;\n      draft.likePostDone = true;\n      break;\n\n    case UNLIKE_POSS_FAILURE:\n      draft.unLikePostLoading = false;\n      draft.unLikePostError = action.error;\n      break;\n\n    case LOAD_POSTS_REQUEST:\n      draft.unLikePostLoading = true;\n      draft.unLikePostDone = false;\n      draft.unLikePostError = null;\n      break;\n\n    case LOAD_POSTS_SUCCESS:\n      draft.unLikePostLoading = false;\n      draft.unLikePostDone = true;\n      draft.mainPosts = action.data.concat(draft.mainPosts);\n      draft.hasMorePosts = draft.mainPosts.length < 50;\n      break;\n\n    case LOAD_POSTS_FAILURE:\n      draft.loadPostsLoading = false;\n      draft.loadPostsError = action.error;\n      break;\n\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(action.data);\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = false;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n      break;\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError = null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n        post.Comments.unshift(action.data);\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break;\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unLikePostLoading","unLikePostDone","unLikePostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyComment","id","shortId","generate","content","User","nickname","reducer","state","action","draft","error","UNLIKE_POSS_FAILURE","concat","length","unshift","filter","v","post","find","PostId","Comments"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/reducers/post.js"],"sourcesContent":["import produce from \"../util/produce\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unLikePostLoading: false,\r\n  unLikePostDone: false,\r\n  unLikePostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"제로초\",\r\n  },\r\n});\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case LIKE_POST_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        break;\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS:\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      case UNLIKE_POSS_FAILURE:\r\n        draft.unLikePostLoading = false;\r\n        draft.unLikePostError = action.error;\r\n        break;\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.unLikePostLoading = true;\r\n        draft.unLikePostDone = false;\r\n        draft.unLikePostError = null;\r\n        break;\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.unLikePostLoading = false;\r\n        draft.unLikePostDone = true;\r\n        draft.mainPosts = action.data.concat(draft.mainPosts);\r\n        draft.hasMorePosts = draft.mainPosts.length < 50;\r\n        break;\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}