{"ast":null,"code":"import produce from \"../util/produce\";\nexport var initialState = {\n  mainPosts: [],\n  singlePost: null,\n  imagePaths: [],\n  hasMorePosts: true,\n  likePostLoading: false,\n  likePostDone: false,\n  likePostError: null,\n  unlikePostLoading: false,\n  unlikePostDone: false,\n  unlikePostError: null,\n  loadPostLoading: false,\n  loadPostDone: false,\n  loadPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  updatePostLoading: false,\n  updatePostDone: false,\n  updatePostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  uploadImagesLoading: false,\n  uploadImagesDone: false,\n  uploadImagesError: null,\n  retweetLoading: false,\n  retweetDone: false,\n  retweetError: null\n};\nexport var UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\nexport var UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\nexport var UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\nexport var LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\nexport var LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\nexport var LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\nexport var UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\nexport var UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\nexport var UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\nexport var LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\nexport var LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\nexport var LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\nexport var LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\nexport var LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\nexport var LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\nexport var LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\nexport var LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\nexport var LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\nexport var LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\nexport var LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\nexport var LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\nexport var ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport var ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport var ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport var UPDATE_POST_REQUEST = \"UPDATE_POST_REQUEST\";\nexport var UPDATE_POST_SUCCESS = \"UPDATE_POST_SUCCESS\";\nexport var UPDATE_POST_FAILURE = \"UPDATE_POST_FAILURE\";\nexport var REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport var REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport var REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport var ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport var ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport var ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport var RETWEET_REQUEST = \"RETWEET_REQUEST\";\nexport var RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\nexport var RETWEET_FAILURE = \"RETWEET_FAILURE\";\nexport var REMOVE_IMAGE = \"REMOVE_IMAGE\";\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n}; // 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case RETWEET_REQUEST:\n        draft.retweetLoading = true;\n        draft.retweetDone = false;\n        draft.retweetError = null;\n        break;\n\n      case RETWEET_SUCCESS:\n        {\n          draft.retweetLoading = false;\n          draft.retweetDone = true;\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        draft.retweetLoading = false;\n        draft.retweetError = action.error;\n        break;\n\n      case REMOVE_IMAGE:\n        draft.imagePaths = draft.imagePaths.filter(function (v, i) {\n          return i !== action.data;\n        });\n        break;\n\n      case UPLOAD_IMAGES_REQUEST:\n        draft.uploadImagesLoading = true;\n        draft.uploadImagesDone = false;\n        draft.uploadImagesError = null;\n        break;\n\n      case UPLOAD_IMAGES_SUCCESS:\n        {\n          draft.imagePaths = draft.imagePaths.concat(action.data);\n          draft.uploadImagesLoading = false;\n          draft.uploadImagesDone = true;\n          break;\n        }\n\n      case UPLOAD_IMAGES_FAILURE:\n        draft.uploadImagesLoading = false;\n        draft.uploadImagesError = action.error;\n        break;\n\n      case LIKE_POST_REQUEST:\n        draft.likePostLoading = true;\n        draft.likePostDone = false;\n        draft.likePostError = null;\n        break;\n\n      case LIKE_POST_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n          post.Likers.push({\n            id: action.data.UserId\n          });\n          draft.likePostLoading = false;\n          draft.likePostDone = true;\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        draft.likePostLoading = false;\n        draft.likePostError = action.error;\n        break;\n\n      case UNLIKE_POST_REQUEST:\n        draft.unlikePostLoading = true;\n        draft.unlikePostDone = false;\n        draft.unlikePostError = null;\n        break;\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post.Likers = _post.Likers.filter(function (v) {\n            return v.id !== action.data.UserId;\n          });\n          draft.unlikePostLoading = false;\n          draft.unlikePostDone = true;\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        draft.unlikePostLoading = false;\n        draft.unlikePostError = action.error;\n        break;\n\n      case LOAD_POST_REQUEST:\n        draft.loadPostLoading = true;\n        draft.loadPostDone = false;\n        draft.loadPostError = null;\n        break;\n\n      case LOAD_POST_SUCCESS:\n        draft.loadPostLoading = false;\n        draft.loadPostDone = true;\n        draft.singlePost = action.data;\n        break;\n\n      case LOAD_POST_FAILURE:\n        draft.loadPostLoading = false;\n        draft.loadPostError = action.error;\n        break;\n\n      case LOAD_USER_POSTS_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n\n      case LOAD_USER_POSTS_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_POSTS_SUCCESS:\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.mainPosts = draft.mainPosts.concat(action.data);\n        draft.hasMorePosts = action.data.length === 10;\n        break;\n\n      case LOAD_USER_POSTS_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n\n      case ADD_POST_SUCCESS:\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        draft.mainPosts.unshift(action.data);\n        draft.imagePaths = [];\n        break;\n\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n\n      case UPDATE_POST_REQUEST:\n        draft.updatePostLoading = true;\n        draft.updatePostDone = false;\n        draft.updatePostError = null;\n        break;\n\n      case UPDATE_POST_SUCCESS:\n        draft.updatePostLoading = false;\n        draft.updatePostDone = true;\n        draft.mainPosts.find(function (v) {\n          return v.id === action.data.PostId;\n        }).content = action.data.content;\n        break;\n\n      case UPDATE_POST_FAILURE:\n        draft.updatePostLoading = false;\n        draft.updatePostError = action.error;\n        break;\n\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n\n      case REMOVE_POST_SUCCESS:\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data.PostId;\n        });\n        break;\n\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var _post2 = draft.mainPosts.find(function (v) {\n            return v.id === action.data.PostId;\n          });\n\n          _post2.Comments.unshift(action.data);\n\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break; // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\n          // const post = { ...state.mainPosts[postIndex] };\n          // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n          // const mainPosts = [...state.mainPosts];\n          // mainPosts[postIndex] = post;\n          // return {\n          //   ...state,\n          //   mainPosts,\n          //   addCommentLoading: false,\n          //   addCommentDone: true,\n          // };\n        }\n\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default reducer;","map":{"version":3,"names":["produce","initialState","mainPosts","singlePost","imagePaths","hasMorePosts","likePostLoading","likePostDone","likePostError","unlikePostLoading","unlikePostDone","unlikePostError","loadPostLoading","loadPostDone","loadPostError","loadPostsLoading","loadPostsDone","loadPostsError","addPostLoading","addPostDone","addPostError","updatePostLoading","updatePostDone","updatePostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","uploadImagesLoading","uploadImagesDone","uploadImagesError","retweetLoading","retweetDone","retweetError","UPLOAD_IMAGES_REQUEST","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","LOAD_USER_POSTS_REQUEST","LOAD_USER_POSTS_SUCCESS","LOAD_USER_POSTS_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","UPDATE_POST_REQUEST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_IMAGE","addPost","data","type","addComment","reducer","state","action","draft","unshift","error","filter","v","i","concat","post","find","id","PostId","Likers","push","UserId","length","content","Comments"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/reducers/post.js"],"sourcesContent":["import produce from \"../util/produce\";\r\n\r\nexport const initialState = {\r\n  mainPosts: [],\r\n  singlePost: null,\r\n  imagePaths: [],\r\n  hasMorePosts: true,\r\n  likePostLoading: false,\r\n  likePostDone: false,\r\n  likePostError: null,\r\n  unlikePostLoading: false,\r\n  unlikePostDone: false,\r\n  unlikePostError: null,\r\n  loadPostLoading: false,\r\n  loadPostDone: false,\r\n  loadPostError: null,\r\n  loadPostsLoading: false,\r\n  loadPostsDone: false,\r\n  loadPostsError: null,\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  updatePostLoading: false,\r\n  updatePostDone: false,\r\n  updatePostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n  uploadImagesLoading: false,\r\n  uploadImagesDone: false,\r\n  uploadImagesError: null,\r\n  retweetLoading: false,\r\n  retweetDone: false,\r\n  retweetError: null,\r\n};\r\n\r\nexport const UPLOAD_IMAGES_REQUEST = \"UPLOAD_IMAGES_REQUEST\";\r\nexport const UPLOAD_IMAGES_SUCCESS = \"UPLOAD_IMAGES_SUCCESS\";\r\nexport const UPLOAD_IMAGES_FAILURE = \"UPLOAD_IMAGES_FAILURE\";\r\n\r\nexport const LIKE_POST_REQUEST = \"LIKE_POST_REQUEST\";\r\nexport const LIKE_POST_SUCCESS = \"LIKE_POST_SUCCESS\";\r\nexport const LIKE_POST_FAILURE = \"LIKE_POST_FAILURE\";\r\n\r\nexport const UNLIKE_POST_REQUEST = \"UNLIKE_POST_REQUEST\";\r\nexport const UNLIKE_POST_SUCCESS = \"UNLIKE_POST_SUCCESS\";\r\nexport const UNLIKE_POST_FAILURE = \"UNLIKE_POST_FAILURE\";\r\n\r\nexport const LOAD_POST_REQUEST = \"LOAD_POST_REQUEST\";\r\nexport const LOAD_POST_SUCCESS = \"LOAD_POST_SUCCESS\";\r\nexport const LOAD_POST_FAILURE = \"LOAD_POST_FAILURE\";\r\n\r\nexport const LOAD_USER_POSTS_REQUEST = \"LOAD_USER_POSTS_REQUEST\";\r\nexport const LOAD_USER_POSTS_SUCCESS = \"LOAD_USER_POSTS_SUCCESS\";\r\nexport const LOAD_USER_POSTS_FAILURE = \"LOAD_USER_POSTS_FAILURE\";\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = \"LOAD_HASHTAG_POSTS_REQUEST\";\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = \"LOAD_HASHTAG_POSTS_SUCCESS\";\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = \"LOAD_HASHTAG_POSTS_FAILURE\";\r\n\r\nexport const LOAD_POSTS_REQUEST = \"LOAD_POSTS_REQUEST\";\r\nexport const LOAD_POSTS_SUCCESS = \"LOAD_POSTS_SUCCESS\";\r\nexport const LOAD_POSTS_FAILURE = \"LOAD_POSTS_FAILURE\";\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const UPDATE_POST_REQUEST = \"UPDATE_POST_REQUEST\";\r\nexport const UPDATE_POST_SUCCESS = \"UPDATE_POST_SUCCESS\";\r\nexport const UPDATE_POST_FAILURE = \"UPDATE_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const RETWEET_REQUEST = \"RETWEET_REQUEST\";\r\nexport const RETWEET_SUCCESS = \"RETWEET_SUCCESS\";\r\nexport const RETWEET_FAILURE = \"RETWEET_FAILURE\";\r\n\r\nexport const REMOVE_IMAGE = \"REMOVE_IMAGE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\n// 이전 상태를 액션을 통해 다음 상태로 만들어내는 함수(불변성은 지키면서)\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case RETWEET_REQUEST:\r\n        draft.retweetLoading = true;\r\n        draft.retweetDone = false;\r\n        draft.retweetError = null;\r\n        break;\r\n      case RETWEET_SUCCESS: {\r\n        draft.retweetLoading = false;\r\n        draft.retweetDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        break;\r\n      }\r\n      case RETWEET_FAILURE:\r\n        draft.retweetLoading = false;\r\n        draft.retweetError = action.error;\r\n        break;\r\n      case REMOVE_IMAGE:\r\n        draft.imagePaths = draft.imagePaths.filter((v, i) => i !== action.data);\r\n        break;\r\n      case UPLOAD_IMAGES_REQUEST:\r\n        draft.uploadImagesLoading = true;\r\n        draft.uploadImagesDone = false;\r\n        draft.uploadImagesError = null;\r\n        break;\r\n      case UPLOAD_IMAGES_SUCCESS: {\r\n        draft.imagePaths = draft.imagePaths.concat(action.data);\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesDone = true;\r\n        break;\r\n      }\r\n      case UPLOAD_IMAGES_FAILURE:\r\n        draft.uploadImagesLoading = false;\r\n        draft.uploadImagesError = action.error;\r\n        break;\r\n      case LIKE_POST_REQUEST:\r\n        draft.likePostLoading = true;\r\n        draft.likePostDone = false;\r\n        draft.likePostError = null;\r\n        break;\r\n      case LIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers.push({ id: action.data.UserId });\r\n        draft.likePostLoading = false;\r\n        draft.likePostDone = true;\r\n        break;\r\n      }\r\n      case LIKE_POST_FAILURE:\r\n        draft.likePostLoading = false;\r\n        draft.likePostError = action.error;\r\n        break;\r\n      case UNLIKE_POST_REQUEST:\r\n        draft.unlikePostLoading = true;\r\n        draft.unlikePostDone = false;\r\n        draft.unlikePostError = null;\r\n        break;\r\n      case UNLIKE_POST_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Likers = post.Likers.filter((v) => v.id !== action.data.UserId);\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostDone = true;\r\n        break;\r\n      }\r\n      case UNLIKE_POST_FAILURE:\r\n        draft.unlikePostLoading = false;\r\n        draft.unlikePostError = action.error;\r\n        break;\r\n      case LOAD_POST_REQUEST:\r\n        draft.loadPostLoading = true;\r\n        draft.loadPostDone = false;\r\n        draft.loadPostError = null;\r\n        break;\r\n      case LOAD_POST_SUCCESS:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostDone = true;\r\n        draft.singlePost = action.data;\r\n        break;\r\n      case LOAD_POST_FAILURE:\r\n        draft.loadPostLoading = false;\r\n        draft.loadPostError = action.error;\r\n        break;\r\n      case LOAD_USER_POSTS_REQUEST:\r\n      case LOAD_HASHTAG_POSTS_REQUEST:\r\n      case LOAD_POSTS_REQUEST:\r\n        draft.loadPostsLoading = true;\r\n        draft.loadPostsDone = false;\r\n        draft.loadPostsError = null;\r\n        break;\r\n      case LOAD_USER_POSTS_SUCCESS:\r\n      case LOAD_HASHTAG_POSTS_SUCCESS:\r\n      case LOAD_POSTS_SUCCESS:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsDone = true;\r\n        draft.mainPosts = draft.mainPosts.concat(action.data);\r\n        draft.hasMorePosts = action.data.length === 10;\r\n        break;\r\n      case LOAD_USER_POSTS_FAILURE:\r\n      case LOAD_HASHTAG_POSTS_FAILURE:\r\n      case LOAD_POSTS_FAILURE:\r\n        draft.loadPostsLoading = false;\r\n        draft.loadPostsError = action.error;\r\n        break;\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(action.data);\r\n        draft.imagePaths = [];\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = false;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case UPDATE_POST_REQUEST:\r\n        draft.updatePostLoading = true;\r\n        draft.updatePostDone = false;\r\n        draft.updatePostError = null;\r\n        break;\r\n      case UPDATE_POST_SUCCESS:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostDone = true;\r\n        draft.mainPosts.find((v) => v.id === action.data.PostId).content =\r\n          action.data.content;\r\n        break;\r\n      case UPDATE_POST_FAILURE:\r\n        draft.updatePostLoading = false;\r\n        draft.updatePostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter(\r\n          (v) => v.id !== action.data.PostId\r\n        );\r\n        break;\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError = null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.PostId);\r\n        post.Comments.unshift(action.data);\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}