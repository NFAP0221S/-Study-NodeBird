{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from \"../reducers/user\"; // LoadUser\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\", {\n    withCredentials: true\n  });\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n} // 로그인\n\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n} // 로그아웃\n\n\nfunction logOutAPI() {\n  return axios.post(\"/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n} // 회원가입\n\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n} // 팔로우\n\n\nfunction followAPI() {\n  return axios.post(\"/api/follow\");\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/unfollow\");\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLoadUser), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp) // fork(watchRemoveFollower),\n  // fork(watchLoadFollowers),\n  // fork(watchLoadFollowings),\n  // fork(watchChangeNickname),\n  // fork(watchLoadUser),\n  ]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","call","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loadUserAPI","get","withCredentials","loadUser","action","result","data","type","err","console","error","response","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","log","followAPI","follow","unfollowAPI","unfollow","watchLoadUser","LOAD_USER_REQUEST","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"sources":["C:/Users/hs/OneDrive/바탕 화면/CodeBox/Inflearn/NodeBird/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  FOLLOW_FAILURE,\r\n  FOLLOW_REQUEST,\r\n  FOLLOW_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  SIGN_UP_FAILURE,\r\n  SIGN_UP_REQUEST,\r\n  SIGN_UP_SUCCESS,\r\n  UNFOLLOW_FAILURE,\r\n  UNFOLLOW_REQUEST,\r\n  UNFOLLOW_SUCCESS,\r\n} from \"../reducers/user\";\r\n\r\n// LoadUser\r\nfunction loadUserAPI() {\r\n  return axios.get(\"/user\", {\r\n    withCredentials: true,\r\n  });\r\n}\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUserAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 로그인\r\nfunction logInAPI(data) {\r\n  return axios.post(\"/user/login\", data);\r\n}\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data);\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 로그아웃\r\nfunction logOutAPI() {\r\n  return axios.post(\"/logout\");\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    yield call(logOutAPI);\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 회원가입\r\nfunction signUpAPI(data) {\r\n  return axios.post(\"/user\", data);\r\n}\r\n\r\nfunction* signUp(action) {\r\n  try {\r\n    const result = yield call(signUpAPI, action.data);\r\n    console.log(result);\r\n    yield put({\r\n      type: SIGN_UP_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: SIGN_UP_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\n// 팔로우\r\nfunction followAPI() {\r\n  return axios.post(\"/api/follow\");\r\n}\r\n\r\nfunction* follow(action) {\r\n  try {\r\n    // const result = yield call(followAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: FOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: FOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction unfollowAPI() {\r\n  return axios.post(\"/api/unfollow\");\r\n}\r\n\r\nfunction* unfollow(action) {\r\n  try {\r\n    // const result = yield call(unfollowAPI);\r\n    yield delay(1000);\r\n    yield put({\r\n      type: UNFOLLOW_SUCCESS,\r\n      data: action.data,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    yield put({\r\n      type: UNFOLLOW_FAILURE,\r\n      error: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\r\n}\r\n\r\nfunction* watchFollow() {\r\n  yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\n\r\nfunction* watchUnfollow() {\r\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchLoadUser),\r\n    fork(watchFollow),\r\n    fork(watchUnfollow),\r\n    fork(watchLogIn),\r\n    fork(watchLogOut),\r\n    fork(watchSignUp),\r\n\r\n    // fork(watchRemoveFollower),\r\n    // fork(watchLoadFollowers),\r\n    // fork(watchLoadFollowings),\r\n    // fork(watchChangeNickname),\r\n    // fork(watchLoadUser),\r\n  ]);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}